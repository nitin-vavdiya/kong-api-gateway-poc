# Kong Gateway POC Values
kong:
  # Custom Kong image with Python PDK support
  image:
    repository: kong-python-pdk
    tag: "3.4"
    pullPolicy: IfNotPresent
  
  # Enable custom Python plugins
  plugins:
    configMaps: []
    secrets: []
  # Database configuration - using DB-less mode for simplicity
  env:
    database: "off"
    nginx_worker_processes: "2"
    proxy_access_log: /dev/stdout
    admin_access_log: /dev/stdout
    proxy_error_log: /dev/stderr
    admin_error_log: /dev/stderr
    log_level: info
    # Python plugin server configuration
    pluginserver_names: "python"
    pluginserver_python_socket: "/tmp/python_pluginserver.sock"
    pluginserver_python_start_cmd: "kong-python-pluginserver -d /usr/local/kong/plugins --socket-name /tmp/python_pluginserver.sock"
    pluginserver_python_query_cmd: "kong-python-pluginserver -d /usr/local/kong/plugins --dump-all-plugins"
    # Enable custom Python plugins  
    plugins: "bundled,custom-jwt-auth,custom-auth-pre-function"


  # Enable ingress controller
  ingressController:
    enabled: true
    installCRDs: false
    # Disable admission webhook for custom plugins
    admissionWebhook:
      enabled: false

  # Admin API configuration
  admin:
    enabled: true
    type: NodePort
    nodePort: 32001
    http:
      enabled: true
      servicePort: 8001
      containerPort: 8001

  # Proxy service configuration
  proxy:
    enabled: true
    type: NodePort
    http:
      enabled: true
      servicePort: 80
      containerPort: 8000
      nodePort: 32000
    https:
      enabled: false

  # Enterprise features
  enterprise:
    enabled: false

  # Resource limits
  resources:
    limits:
      cpu: "1"
      memory: "1Gi"
    requests:
      cpu: "500m"
      memory: "512Mi"

  # Node selector for minikube
  nodeSelector: {}

  # Tolerations
  tolerations: []

  # Affinity
  affinity: {}

# Downstream services configuration
downstreamServices:
  service1:
    name: downstream-service-1
    port: 8001
    image: downstream-service-1:latest
    replicas: 1
  
  service2:
    name: downstream-service-2
    port: 8002
    image: downstream-service-2:latest
    replicas: 1

# Auth service configuration
authService:
  name: auth-service
  port: 8003
  image: auth-service:latest
  replicas: 1
  # URL for the auth service verification endpoint
  url: "http://auth-service:8003/auth/verify"
  timeout: 10
  sslVerify: false
  retryCount: 0
  env:
    KEYCLOAK_BASE_URL: "https://d1df8d9f5a76.ngrok-free.app"
    KEYCLOAK_REALM: "kong"

# Keycloak configuration
keycloak:
  baseUrl: "https://d1df8d9f5a76.ngrok-free.app"
  realm: "kong"
  clientId: "kong_client"
  expectedIssuer: "http://d1df8d9f5a76.ngrok-free.app/realms/kong"
  expectedAudience: "account"
  cacheTtl: 3600
  sslVerify: false
  
# Python Plugins Configuration
pythonPlugins:
  enabled: true
  customJwtAuth:
    enabled: true
  customAuthPreFunction:
    enabled: true


# Kong plugins global configuration
kongPlugins:
  # Rate limiting configuration
  rateLimiting:
    requests_per_second: 100
    requests_per_minute: 1000
    requests_per_hour: 10000
  
  # Custom Auth Pre-Function Plugin configuration
  customAuthPreFunction:
    auth_service_url: "http://auth-service:8003"
    auth_service_timeout: 10
    ssl_verify: false
    retry_count: 2

# Enhanced Routes configuration - Source of Truth
routes:
  # Public routes - No authentication required
  public:
    enabled: true
    description: "Public endpoints accessible without authentication"
    plugins:
      - "rate-limiting-global"
      - "cors"
    paths:
      - path: "/api/public/service1"
        service: "downstream-service-1"
        port: 8001
        pathType: "Prefix"
      - path: "/api/public/service2"
        service: "downstream-service-2"  
        port: 8002
        pathType: "Prefix"
    
  # Protected routes - JWT authentication required
  protected:
    enabled: true
    description: "Protected endpoints requiring valid JWT token"
    plugins:
      - "custom-jwt-auth"
      - "rate-limiting-global"
      - "cors"
    paths:
      - path: "/api/protected/service1"
        service: "downstream-service-1"
        port: 8001
        pathType: "Prefix"
      - path: "/api/protected/service2"
        service: "downstream-service-2"
        port: 8002
        pathType: "Prefix"
    
  # Private routes - Always blocked
  private:
    enabled: true
    description: "Private endpoints that are always rejected"
    plugins:
      - "request-termination-private"
    paths:
      - path: "/api/private/service1"
        service: "downstream-service-1"
        port: 8001
        pathType: "Prefix"
      - path: "/api/private/service2"
        service: "downstream-service-2"
        port: 8002
        pathType: "Prefix"
    
  # Custom routes - External authorization service
  custom:
    enabled: true
    description: "Custom endpoints with external authorization"
    plugins:
      - "custom-auth-pre-function"
      - "rate-limiting-global"
      - "cors"
    paths:
      - path: "/api/custom/service1"
        service: "downstream-service-1"
        port: 8001
        pathType: "Prefix"
      - path: "/api/custom/service2"
        service: "downstream-service-2"
        port: 8002
        pathType: "Prefix"
